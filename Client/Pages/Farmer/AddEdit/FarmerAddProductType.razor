@page "/producttype/add"
@page "/producttype/edit/{ProductTypeId:int}"
@using FarmCentral.Shared.Models;
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@using System.ComponentModel.DataAnnotations
@inject ISnackbar Snackbar
@using System.Globalization

<PageTitle>Add Product Type</PageTitle>
<MudDialog>
    <DialogContent>
        <EditForm Model="@productType" OnValidSubmit="SaveProduct">
            <DataAnnotationsValidator />
            <MudGrid>
                <MudItem xs="12" sm="24">
                    <MudCard>
                        <MudCardContent>
                            <MudTextField Label="Product Name"
                                          @bind-Value="productType.Name" For="@(() => productType.Name)" />
                        </MudCardContent>
                        <MudCardActions>
                            <MudPaper Class="d-flex flex-column flex-grow-1 gap-4" Elevation="0">
                                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">@Title</MudButton>
                                <MudButton @onclick="@(() => HomePage())" Variant="Variant.Filled" Color="Color.Secondary">Cancel</MudButton>
                            </MudPaper>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            </MudGrid>
        </EditForm>
    </DialogContent>
</MudDialog>


@code {
    [Parameter]
    public int ProductTypeID { get; set; }
    protected string Title { get; set; } = "Add";
    protected ProductType productType { get; set; } = new ProductType();
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }
    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();

    protected override async Task OnParametersSetAsync()
    {
        if (ProductTypeID != 0)
        {
            Title = "Edit";
            productType = await HttpClient.GetFromJsonAsync<ProductType>($"api/ProductType/{ProductTypeID}");
        }
    }

    protected async Task SaveProduct()
    {
        if (ProductTypeID != 0)
        {
            await HttpClient.PutAsJsonAsync("api/ProductType", productType);
            Snackbar.Add("Updated Product Type", Severity.Success);
        }
        else
        {
            await HttpClient.PostAsJsonAsync("api/ProductType", productType);
            Snackbar.Add("Added Product Type", Severity.Success);
        }

        HomePage();
    }

    public void HomePage()
    {
        NavigationManager.NavigateTo("farmerindex");
    }

}
